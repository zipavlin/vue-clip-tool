{"version":3,"sources":["webpack://ClipTool/webpack/universalModuleDefinition","webpack://ClipTool/webpack/bootstrap","webpack://ClipTool/./src/ClipTool.vue?8dd1","webpack://ClipTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/lib/listToStyles.js","webpack://ClipTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/lib/addStylesClient.js","webpack://ClipTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://ClipTool/./src/ClipTool.vue?b9ef","webpack://ClipTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/lib/css-base.js","webpack://ClipTool/./src/ClipTool.vue?0578","webpack://ClipTool/src/ClipTool.vue","webpack://ClipTool/./src/ClipTool.vue?d754","webpack://ClipTool/C:/Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://ClipTool/./src/ClipTool.vue","webpack://ClipTool/./src/ClipTool.vue?4a1c","webpack://ClipTool/./node_modules/hammerjs/hammer.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_css_loader_index_js_ref_8_oneOf_1_1_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_cache_loader_dist_cjs_js_ref_0_0_Users_zigap_AppData_Roaming_npm_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_ClipTool_vue_vue_type_style_index_0_id_532375d6_scoped_true_lang_scss__WEBPACK_IMPORTED_MODULE_0___default","listToStyles","parentId","list","styles","newStyles","length","item","id","css","media","sourceMap","part","parts","push","__webpack_exports__","addStylesClient","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","type","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","replaceText","textStore","index","replacement","filter","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","window","currentScript","src","match","content","locals","add","default","shadowMode","cssWithMappingToString","useSourceMap","cssMapping","sourceMapping","toComment","sourceURLs","map","source","sourceRoot","concat","base64","data","toString","mediaQuery","alreadyImportedModules","render","_vm","_h","$createElement","_c","_self","ref","staticClass","attrs","width","height","viewBox","viewbox","data-action","action","on","click","addPoint","contextmenu","onContextMenu","mOptions","points","path","stroke","fill","_e","stroke-width","strokeArea","mouseenter","setPathHover","mouseleave","setPathNormal","_v","_s","pathTitle","strokeWidth","_l","point","data-selected","selectedPoint","cx","cy","pointTitle","blankText","text-anchor","x","y","dy","staticRenderFns","getPathLength","reduce","sum","a","b","dx","Math","abs","dc","pow","sqrt","getClosestPointOnLine","A","B","fTo","dist","rl2","ln2","lnm12","dist2","calcrl2","ClipToolvue_type_script_lang_js","props","[object Object]","disableAddPoint","managers","pressManager","dragManager","isMobile","substr","computed","assign","confirmText","minPointDistance","limitToParent","canMoveClip","$refs","svg","querySelectorAll","forEach","circle","registerEvents","manager","hammer_default","Manager","recognizers","Press","e","onHoverMenu","srcEvent","pathMove","Pan","moveClipStart","moveClip","moveClipEnd","removeListeners","methods","clickPoint","createSVGPoint","layerX","layerY","pathOutline","isPointInStroke","Number","newPoints","slice","splice","newLength","ceil","pointOnLine","prevPointDistance","nextPointDistance","round","endEdit","left","top","shiftKey","lastPoint","element","Tap","panStart","panMove","panEnd","tap","handler","handlers","destroy","target","attributes","movementX","movementY","setTimeout","parseInt","removeEventListener","onKeyDown","addEventListener","confirm","preventDefault","$listeners","$emit","newValue","src_ClipToolvue_type_script_lang_js","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","ClipTool","__WEBPACK_AMD_DEFINE_RESULT__","exportName","undefined","VENDOR_PREFIXES","TEST_ELEMENT","TYPE_FUNCTION","now","Date","setTimeoutContext","fn","timeout","bindFn","invokeArrayArg","arg","Array","isArray","each","iterator","deprecate","method","message","deprecationMessage","stack","replace","log","console","warn","apply","arguments","TypeError","output","nextKey","extend","dest","merge","keys","inherit","child","base","properties","childP","baseP","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","uniqueArray","sort","results","values","prefixed","prefix","prop","camelProp","toUpperCase","_uniqueId","uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","callback","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","PointerEventInput","TouchInput","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","v","clientX","clientY","p1","p2","atan2","PI","start","end","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","isSyntheticEvent","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","TouchAction","set","cleanTouchActions","actions","hasPanX","hasPanY","touchMap","cssSupports","CSS","supports","compute","touchAction","recognizer","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","oldCssProps","toggleCssProps","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","stop","force","stopped","curRecognizer","events","off","Swipe","Pinch","Rotate","freeGlobal"],"mappings":"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","file":"ClipTool.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipTool\"] = factory();\n\telse\n\t\troot[\"ClipTool\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"dOjU\");\n","import mod from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/index.js??ref--8-oneOf-1-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipTool.vue?vue&type=style&index=0&id=532375d6&scoped=true&lang=scss\"; export default mod; export * from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/index.js??ref--8-oneOf-1-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipTool.vue?vue&type=style&index=0&id=532375d6&scoped=true&lang=scss\"","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  let i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipTool.vue?vue&type=style&index=0&id=532375d6&scoped=true&lang=scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"37592488\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{ref:\"svg\",staticClass:\"clip-tool\",attrs:{\"width\":_vm.width || '100%',\"height\":_vm.height || '100%',\"viewBox\":_vm.viewbox,\"data-action\":_vm.action},on:{\"click\":_vm.addPoint,\"contextmenu\":_vm.onContextMenu}},[(_vm.mOptions.canMoveClip)?_c('polygon',{ref:\"pathMove\",staticClass:\"clip-tool-path-move\",attrs:{\"points\":_vm.path,\"stroke\":\"none\",\"fill\":\"transparent\"}}):_vm._e(),(_vm.value.length > 0)?_c('polygon',{ref:\"pathOutline\",staticClass:\"clip-tool-path-outline\",attrs:{\"points\":_vm.path,\"stroke\":\"transparent\",\"stroke-width\":_vm.mOptions.strokeArea,\"fill\":\"none\"},on:{\"mouseenter\":_vm.setPathHover,\"mouseleave\":_vm.setPathNormal}},[(_vm.mOptions.pathTitle)?_c('title',[_vm._v(_vm._s(_vm.mOptions.pathTitle))]):_vm._e()]):_vm._e(),(_vm.value.length > 0)?_c('polygon',{ref:\"pathDisplay\",staticClass:\"clip-tool-path-display\",attrs:{\"points\":_vm.path,\"stroke\":_vm.mOptions.stroke,\"stroke-width\":_vm.mOptions.strokeWidth,\"fill\":\"none\"}}):_vm._e(),_vm._l((_vm.value),function(point,i){return _c('g',{key:i,staticClass:\"clip-tool-point\"},[_c('circle',{staticClass:\"clip-tool-point-outline\",attrs:{\"data-selected\":i === _vm.selectedPoint,\"index\":i,\"cx\":point[0],\"cy\":point[1],\"r\":_vm.mOptions.strokeArea / 2,\"stroke\":\"none\",\"fill\":\"transparent\"}},[(_vm.mOptions.pointTitle)?_c('title',[_vm._v(_vm._s(_vm.mOptions.pointTitle))]):_vm._e()]),_c('circle',{staticClass:\"clip-tool-point-display\",attrs:{\"cx\":point[0],\"cy\":point[1],\"r\":_vm.mOptions.strokeWidth,\"stroke\":\"none\",\"fill\":_vm.mOptions.stroke}})])}),(_vm.mOptions.blankText && _vm.value.length === 0)?_c('g',[_c('text',{staticClass:\"clip-tool-text\",attrs:{\"text-anchor\":\"middle\",\"x\":_vm.width / 2,\"y\":_vm.height / 2,\"dy\":\"7\",\"stroke\":\"white\",\"stroke-width\":\"4\",\"fill\":_vm.mOptions.stroke}},[_vm._v(_vm._s(_vm.mOptions.blankText))]),_c('text',{staticClass:\"clip-tool-text\",attrs:{\"text-anchor\":\"middle\",\"x\":_vm.width / 2,\"y\":_vm.height / 2,\"dy\":\"7\",\"stroke\":\"none\",\"fill\":_vm.mOptions.stroke}},[_vm._v(_vm._s(_vm.mOptions.blankText))])]):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <svg ref=\"svg\" class=\"clip-tool\" :width=\"width || '100%'\" :height=\"height || '100%'\" :viewBox=\"viewbox\" :data-action=\"action\" @click=\"addPoint\" @contextmenu=\"onContextMenu\">\n        <polygon class=\"clip-tool-path-move\" v-if=\"mOptions.canMoveClip\" ref=\"pathMove\" :points=\"path\" stroke=\"none\" fill=\"transparent\"></polygon>\n        <polygon class=\"clip-tool-path-outline\" v-if=\"value.length > 0\" ref=\"pathOutline\" :points=\"path\" stroke=\"transparent\" :stroke-width=\"mOptions.strokeArea\" fill=\"none\"  @mouseenter=\"setPathHover\" @mouseleave=\"setPathNormal\">\n            <title v-if=\"mOptions.pathTitle\">{{mOptions.pathTitle}}</title>\n        </polygon>\n        <polygon class=\"clip-tool-path-display\" v-if=\"value.length > 0\" ref=\"pathDisplay\" :points=\"path\" :stroke=\"mOptions.stroke\" :stroke-width=\"mOptions.strokeWidth\" fill=\"none\"></polygon>\n        <g class=\"clip-tool-point\" v-for=\"(point, i) of value\" :key=\"i\">\n            <circle class=\"clip-tool-point-outline\" :data-selected=\"i === selectedPoint\" :index=\"i\" :cx=\"point[0]\" :cy=\"point[1]\" :r=\"mOptions.strokeArea / 2\" stroke=\"none\" fill=\"transparent\"><title v-if=\"mOptions.pointTitle\">{{mOptions.pointTitle}}</title></circle>\n            <circle class=\"clip-tool-point-display\" :cx=\"point[0]\" :cy=\"point[1]\" :r=\"mOptions.strokeWidth\" stroke=\"none\" :fill=\"mOptions.stroke\"></circle>\n        </g>\n        <g v-if=\"mOptions.blankText && value.length === 0\">\n            <text  class=\"clip-tool-text\" text-anchor=\"middle\" :x=\"width / 2\" :y=\"height / 2\" dy=\"7\" stroke=\"white\" stroke-width=\"4\" :fill=\"mOptions.stroke\">{{mOptions.blankText}}</text>\n            <text  class=\"clip-tool-text\" text-anchor=\"middle\" :x=\"width / 2\" :y=\"height / 2\" dy=\"7\" stroke=\"none\" :fill=\"mOptions.stroke\">{{mOptions.blankText}}</text>\n        </g>\n    </svg>\n</template>\n\n<script>\n    import Hammer from 'hammerjs';\n\n    const getPathLength = (value) => {\n        return value.reduce((sum, a, i) => {\n            const b = i + 1 === value.length ? value[0] : value[i + 1];\n\n            let dx = Math.abs(b[0] - a[0]),\n                dy = Math.abs(b[1] - a[1]),\n                dc = Math.pow(dx, 2) + Math.pow(dy, 2),\n                c = Math.sqrt(dc);\n            return sum + c;\n        }, 0)\n    };\n    const getClosestPointOnLine = (p, A, B) => {\n        let fTo;\n        let x;\n        let y;\n        let dist;\n\n        if (B[0] !== A[0]) {\n            const a = (B[1] - A[1]) / (B[0] - A[0]);\n            const b = B[1] - a * B[0];\n            dist = Math.abs(a * p[0] + b - p[1]) / Math.sqrt(a * a + 1);\n        }\n        else {\n            dist = Math.abs(p[0] - B[0]);\n        }\n\n        // length^2 of line segment\n        const rl2 = Math.pow(B[1] - A[1], 2) + Math.pow(B[0] - A[0], 2);\n\n        // distance^2 of pt to end line segment\n        const ln2 = Math.pow(B[1] - p[1], 2) + Math.pow(B[0] - p[0], 2);\n\n        // distance^2 of pt to begin line segment\n        const lnm12 = Math.pow(A[1] - p[1], 2) + Math.pow(A[0] - p[0], 2);\n\n        // minimum distance^2 of pt to infinite line\n        const dist2 = Math.pow(dist, 2);\n\n        // calculated length^2 of line segment\n        const calcrl2 = ln2 - dist2 + lnm12 - dist2;\n\n        if (calcrl2 > rl2) {\n            if (lnm12 < ln2) {\n                fTo = 0;\n            }\n            else {\n                fTo = 1;\n            }\n        }\n        else {\n            // perpendicular from point intersects line segment\n            fTo = ((Math.sqrt(lnm12 - dist2)) / Math.sqrt(rl2));\n        }\n\n        const dx = A[0] - B[0];\n        const dy = A[1] - B[1];\n\n        x = A[0] - (dx * fTo);\n        y = A[1] - (dy * fTo);\n\n        return [x, y];\n    };\n\n    export default {\n        name: \"ClipTool\",\n        props: {\n            width: {\n                default: 100\n            },\n            height: {\n                default: 100\n            },\n            value: {\n                default: []\n            },\n            options: {\n                default: () => ({}),\n                type: Object\n            }\n        },\n        data() {\n            return {\n                selectedPoint: null,\n                disableAddPoint: false,\n                action: null,\n                managers: [],\n                pressManager: null,\n                dragManager: null,\n                isMobile: (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4)))\n            }\n        },\n        computed: {\n            // mOptions merged from props and default\n            mOptions() {\n                return Object.assign({\n                    stroke: '#00C2FF',\n                    strokeWidth: 2,\n                    strokeArea: 20,\n                    pathTitle: null,\n                    pointTitle: null,\n                    confirmText: null,\n                    minPointDistance: 10,\n                    limitToParent: true,\n                    canMoveClip: true,\n                    blankText: 'Click to add a point',\n                }, this.options);\n            },\n            viewbox() {\n                return `0 0 ${this.width} ${this.height}`;\n            },\n            path() {\n                return this.value.map(x => x.join(',')).join(' ');\n            },\n            length() {\n                return getPathLength(this.value);\n            }\n        },\n        mounted() {\n            // init create move listeners on points\n            this.$refs.svg.querySelectorAll('.clip-tool-point-outline').forEach(circle => {\n                this.registerEvents(circle);\n            });\n            // create listener for mobile right click (press)\n            if (this.isMobile) {\n                let manager = new Hammer.Manager(this.$refs.svg, {\n                    recognizers: [\n                        [Hammer.Press]\n                    ]\n                });\n                this.pressManager = manager;\n                manager.on('press', function (e) {\n                    this.onHoverMenu(e.srcEvent);\n                }.bind(this));\n            }\n            // create listener to move whole mask\n            if (this.mOptions.canMoveClip) {\n                let manager = new Hammer.Manager(this.$refs.pathMove, {\n                    recognizers: [\n                        [Hammer.Pan]\n                    ]\n                });\n                this.pressManager = manager;\n                manager.on('panstart', this.moveClipStart);\n                manager.on('panmove', this.moveClip);\n                manager.on('panend', this.moveClipEnd);\n            }\n        },\n        beforeDestroy() {\n            // remove listeners from value\n            this.managers.forEach(m => {this.removeListeners(m)});\n            // remove listener for press\n            if (this.pressManager) {\n                this.removeListeners(this.pressManager);\n            }\n            // remove listener for move\n            if (this.dragManager) {\n                this.removeListeners(this.dragManager);\n            }\n        },\n        methods: {\n            addPoint(e) {\n                if (this.selectedPoint) return;\n                if (!this.disableAddPoint) {\n                    // create click point\n                    let clickPoint = this.$refs.svg.createSVGPoint();\n                    clickPoint.x = e.layerX;\n                    clickPoint.y = e.layerY;\n                    // check if target is polygon -> add new point between existing value\n                    if (this.$refs.pathOutline && this.$refs.pathOutline.isPointInStroke(clickPoint)) {\n                        // make a copy of array length. It goes to infinitive loop if not\n                        const length = Number(this.value.length);\n                        // try all positions of new point. If we have a right one, the length shouldn't change\n                        for (let i = 1; i <= length; i++) {\n                            // make a deep copy of array\n                            const newPoints = this.value.slice(0, this.value.length);\n                            // add new point\n                            newPoints.splice(i, 0, [clickPoint.x, clickPoint.y]);\n                            // calculate new length\n                            const newLength = getPathLength(newPoints);\n                            // add point to index = i if length didn't change for more than this.\n                            if (Math.ceil(newLength) <= Math.ceil(this.length)) {\n                                // find closest point on line\n                                const pointOnLine = getClosestPointOnLine([e.layerX, e.layerY], this.value[(i === 0 ? this.value.length : i) - 1], this.value[i === this.value.length ? 0 : i]);\n                                const prevPointDistance = Math.sqrt(Math.pow(Math.abs(this.value[(i === 0 ? this.value.length : 1) - 1][0] - pointOnLine[0]), 2) + Math.pow(Math.abs(this.value[(i === 0 ? this.value.length : 1) - 1][1] - pointOnLine[1]), 2));\n                                const nextPointDistance = Math.sqrt(Math.pow(Math.abs(this.value[i === this.value.length ? 0 : i][0] - pointOnLine[0]), 2) + Math.pow(Math.abs(this.value[i === this.value.length ? 0 : i][1] - pointOnLine[1]), 2));\n                                if (prevPointDistance >= this.mOptions.minPointDistance && nextPointDistance >= this.mOptions.minPointDistance) {\n                                    this.value.splice(i, 0, pointOnLine.map(x => Math.round(x)));\n                                    this.endEdit();\n                                }\n                                break;\n                            }\n                        }\n\n                    }\n                    // push new point to path\n                    else {\n                        let left = e.layerX;\n                        let top = e.layerY;\n                        // if shift key is pressed we assume user wants to put point in straight line\n                        if (e.shiftKey && this.value.length !== 0) {\n                            // get last item value\n                            const lastPoint = this.value.slice(-1)[0];\n\n                            // check which diff is smaller\n                            const dx = Math.abs(left - lastPoint[0]);\n                            const dy = Math.abs(top - lastPoint[1]);\n\n                            if (dx > dy) {\n                                top = lastPoint[1];\n                            } else {\n                                left = lastPoint[0];\n                            }\n                        }\n                        this.value.push([left, top].map(x => Math.round(x)));\n                        this.endEdit();\n                    }\n                }\n            },\n            registerEvents (element) {\n                const manager = new Hammer.Manager(element, {\n                    recognizers: [\n                        [Hammer.Tap],\n                        [Hammer.Pan]\n                    ]\n                });\n                manager.on('panstart', this.panStart);\n                manager.on('pan', this.panMove);\n                manager.on('panend', this.panEnd);\n                manager.on('tap', this.tap);\n                this.managers.push(manager);\n            },\n            removeListeners(manager) {\n                for (let handler in manager.handlers) {\n                    manager.remove(handler);\n                }\n                manager.destroy();\n            },\n            panStart() {\n                if (!this.selectedPoint) {\n                    this.disableAddPoint = true;\n                    this.action = 'point';\n                }\n            },\n            panMove(e) {\n                if (!this.selectedPoint) {\n                    const index = e.target.attributes.index.value;\n                    const x = this.value[index][0] + e.srcEvent.movementX;\n                    const y = this.value[index][1] + e.srcEvent.movementY;\n                    if (this.mOptions.limitToParent) {\n                        if (x > (this.mOptions.strokeWidth * 2) && x < this.width - (this.mOptions.strokeWidth * 2) && y > (this.mOptions.strokeWidth * 2) && y < this.height - (this.mOptions.strokeWidth * 2)) {\n                            this.value.splice(index, 1, [x, y]);\n                        }\n                    }\n                    else {\n                        this.value.splice(index, 1, [x, y]);\n                    }\n                }\n            },\n            panEnd() {\n                if (!this.selectedPoint) {\n                    setTimeout(function () {\n                        this.disableAddPoint = false;\n                    }.bind(this), 100);\n                    this.endEdit();\n                    this.action = null;\n                }\n            },\n            tap(e) {\n                const index = parseInt(e.target.attributes.index.value);\n                if (this.selectedPoint === index) {\n                    this.selectedPoint = null;\n                    this.action = null;\n                    // remove event listener\n                    window.removeEventListener('keydown', this.onKeyDown);\n                } else {\n                    this.selectedPoint = index;\n                    this.action = 'delete';\n                    // add event listener\n                    window.addEventListener('keydown', this.onKeyDown);\n                }\n            },\n            moveClipStart() {\n                this.disableAddPoint = true;\n            },\n            moveClip(e) {\n                // recalculate whole array\n                const newPoints = this.value.map(x => {\n                    return [x[0] + e.srcEvent.movementX, x[1] + e.srcEvent.movementY];\n                });\n                this.endEdit(newPoints);\n            },\n            moveClipEnd() {\n                setTimeout(function () {\n                    this.disableAddPoint = false;\n                }.bind(this), 100);\n            },\n            setPathHover() {\n                if (!this.action) {\n                    this.action = 'path';\n                }\n            },\n            setPathNormal() {\n                if (this.action === 'path') {\n                    this.action = null;\n                }\n            },\n            onKeyDown(e) {\n                if (e.key === 'Backspace' || e.key === 'Delete') {\n                    if (this.mOptions.confirmText && !confirm(this.mOptions.confirmText)) return;\n                    e.preventDefault();\n                    this.value.splice(this.selectedPoint, 1);\n                }\n                this.action = null;\n                this.selectedPoint = null;\n                window.removeEventListener('keydown', this.onKeyDown);\n            },\n            onContextMenu(e) {\n                if (this.$listeners.contextmenu) {\n                    e.preventDefault();\n                    this.$emit('contextmenu', e);\n                }\n            },\n            endEdit(newValue) {\n                // check if num of point changed\n                if (this.managers.length !== this.value.length) {\n                    // reset managers\n                    setTimeout(function () {\n                        this.managers.forEach(manager => manager.destroy());\n                        this.managers = [];\n                        this.$refs.svg.querySelectorAll('.clip-tool-point-outline').forEach(circle => {\n                            this.registerEvents(circle);\n                        });\n                    }.bind(this), 100);\n                }\n                this.$emit('input', newValue || this.value);\n                this.$emit('change');\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    $opacity-transparent: 0;\n    $opacity-light: .2;\n    $opacity-medium: .4;\n    $opacity-hard: .8;\n    $duration: .25s;\n    $hoverPointSize: 3px;\n    $hoverSelectedSize: 6px;\n    .clip-tool {\n        $circle-hover-size: 4px;\n        position: absolute;\n        display: block;\n        top: 0;\n        left: 0;\n        // path\n        &-path-move {\n            cursor: move;\n        }\n        &-path-display {\n            pointer-events: none;\n            opacity: $opacity-hard;\n            transition: opacity $duration;\n        }\n        // point\n        &-point-display {\n            pointer-events: none;\n            transition: r $duration, opacity $duration;\n        }\n        // blank text\n        &-text {\n            font-weight: bold;\n            stroke-linecap: butt;\n            stroke-linejoin: miter;\n            pointer-events: none;\n        }\n\n        // action\n        &:not([data-action=\"delete\"]) .clip-tool-point-outline {\n            cursor: move;\n            &:hover + .clip-tool-point-display {\n                r: $hoverSelectedSize;\n            }\n        }\n        &[data-action=\"path\"] {\n            .clip-tool-path-outline {\n                cursor: copy;\n            }\n            .clip-tool-point-display {\n                r: $hoverPointSize;\n            }\n        }\n        &[data-action=\"point\"] {\n            .clip-tool-path-display {\n                stroke-dasharray: 2px, 2px;\n                opacity: $opacity-medium;\n            }\n        }\n        &[data-action=\"delete\"] {\n            .clip-tool-path-display {\n                stroke-dasharray: 2px, 2px;\n                opacity: $opacity-light;\n            }\n            .clip-tool-point-outline[data-selected=\"true\"] + .clip-tool-point-display {\n                r: $hoverSelectedSize;\n            }\n            .clip-tool-point-outline:not([data-selected=\"true\"]) + .clip-tool-point-display {\n                opacity: $opacity-medium;\n            }\n        }\n    }\n</style>","import mod from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipTool.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipTool.vue?vue&type=script&lang=js\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./ClipTool.vue?vue&type=template&id=532375d6&scoped=true\"\nimport script from \"./ClipTool.vue?vue&type=script&lang=js\"\nexport * from \"./ClipTool.vue?vue&type=script&lang=js\"\nimport style0 from \"./ClipTool.vue?vue&type=style&index=0&id=532375d6&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"532375d6\",\n  null\n  \n)\n\nexport default component.exports","exports = module.exports = require(\"../../../../../Users/zigap/AppData/Roaming/npm/node_modules/@vue/cli-service/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".clip-tool[data-v-532375d6]{position:absolute;display:block;top:0;left:0}.clip-tool-path-move[data-v-532375d6]{cursor:move}.clip-tool-path-display[data-v-532375d6]{pointer-events:none;opacity:.8;transition:opacity .25s}.clip-tool-point-display[data-v-532375d6]{pointer-events:none;transition:r .25s,opacity .25s}.clip-tool-text[data-v-532375d6]{font-weight:700;stroke-linecap:butt;stroke-linejoin:miter;pointer-events:none}.clip-tool:not([data-action=delete]) .clip-tool-point-outline[data-v-532375d6]{cursor:move}.clip-tool:not([data-action=delete]) .clip-tool-point-outline:hover+.clip-tool-point-display[data-v-532375d6]{r:6px}.clip-tool[data-action=path] .clip-tool-path-outline[data-v-532375d6]{cursor:copy}.clip-tool[data-action=path] .clip-tool-point-display[data-v-532375d6]{r:3px}.clip-tool[data-action=point] .clip-tool-path-display[data-v-532375d6]{stroke-dasharray:2px,2px;opacity:.4}.clip-tool[data-action=delete] .clip-tool-path-display[data-v-532375d6]{stroke-dasharray:2px,2px;opacity:.2}.clip-tool[data-action=delete] .clip-tool-point-outline[data-selected=true]+.clip-tool-point-display[data-v-532375d6]{r:6px}.clip-tool[data-action=delete] .clip-tool-point-outline:not([data-selected=true])+.clip-tool-point-display[data-v-532375d6]{opacity:.4}\", \"\"]);\n\n// exports\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}